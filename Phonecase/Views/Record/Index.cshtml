@{
    ViewData["Title"] = "Record Purchase";
}

<div class="container mt-5">
    <h1 class="mb-4 text-primary">Record Purchase</h1>

    <!-- Record Purchase Form -->
    <div class="card shadow mb-5">
        <div class="card-header bg-light py-3">
            <h4 class="mb-0">Record Purchase</h4>
        </div>
        <div class="card-body p-4">
            <form method="post" asp-action="SavePurchase" id="purchaseForm">
                <!-- Vendor Dropdown and Date Picker -->
                <div class="mb-4 d-flex">
                    <!-- Vendor Selection -->
                    <div class="me-3">
                        <label class="form-label fw-bold">Select Vendor</label>
                        <select class="form-control form-control-lg shadow-sm" name="vendorId" id="vendorId" required>
                            <option value="">Select Vendor</option>
                            @foreach (var vendor in ViewBag.Vendors)
                            {
                                <option value="@vendor.VendorId">@vendor.Name</option>
                            }
                        </select>
                    </div>

                    <!-- Date Picker -->
                    <div>
                        <label class="form-label fw-bold">Select Date</label>
                        <input type="date" class="form-control form-control-lg shadow-sm"
                               name="purchaseDate" id="purchaseDate" required>
                    </div>

                </div>

                <!-- Add Items Section -->
                <div id="itemsSection">
                    <div class="item mb-4 border p-4 rounded shadow-sm">
                        <div class="row g-3">
                            <!-- Product Dropdown -->
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Select Product</label>
                                <select class="form-control form-control-lg shadow-sm product-select" name="productIds[]" required>
                                    <option value="">Select Product</option>
                                    @foreach (var product in ViewBag.Products) {
                                        <option value="@product.ProductId">@product.CaseName (@product.Model.Name - @product.CaseManufacturer.Name)</option>
                                    }
                                </select>
                                <button type="button" class="btn btn-secondary btn-lg w-100 mt-3 add-product">
                                    <i class="bi bi-plus-circle me-2"></i>Add New Product
                                </button>
                            </div>

                            <!-- Quantity -->
                            <div class="col-md-2">
                                <label class="form-label fw-bold">Quantity</label>
                                <input type="number" class="form-control form-control-lg shadow-sm quantity" name="quantities[]" required>
                            </div>

                            <!-- Unit Price -->
                            <div class="col-md-2">
                                <label class="form-label fw-bold">Unit Price</label>
                                <input type="number" step="100" class="form-control form-control-lg shadow-sm unit-price" name="unitPrices[]" required>
                            </div>

                            <!-- Total Price -->
                            <div class="col-md-2">
                                <label class="form-label fw-bold">Total Price</label>
                                <input type="text" class="form-control form-control-lg shadow-sm total-price" readonly>
                            </div>
                        </div>

                        <!-- Remove Button -->
                        <div class="d-flex justify-content-end mt-3">
                            <button type="button" class="btn btn-danger btn-sm remove-item">
                                <i class="bi bi-trash me-2"></i>Remove
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Add Another Item Button -->
                <button type="button" class="btn btn-secondary btn-lg w-100 mb-4" id="addItem">
                    <i class="bi bi-plus-circle me-2"></i>Add Another Item
                </button>

                <!-- Purchase Summary -->
                <div class="mb-4 p-4 bg-light rounded shadow-sm">
                    <h5 class="fw-bold">Purchase Summary</h5>
                    <p class="mb-1">Items: <span id="itemCount">0</span></p>
                    <p class="mb-0">Subtotal: Rs.<span id="subtotal">0.00</span></p>
                </div>

                <!-- Save Purchase Button -->
                <button type="submit" class="btn btn-primary btn-lg w-100">
                    <i class="bi bi-save me-2"></i>Save Purchase
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Modal for Adding New Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title fw-bold" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm">
                    <div class="mb-4">
                        <label class="form-label fw-bold">Case Name</label>
                        <input type="text" class="form-control form-control-lg shadow-sm" id="caseName" required>
                    </div>
                    <div class="mb-4">
                        <label class="form-label fw-bold">Phone Model</label>
                        <select class="form-control form-control-lg shadow-sm" id="modelId" required>
                            <option value="">Select Phone Model</option>
                            @foreach (var modelphone in ViewBag.Models) {
                                <option value="@modelphone.ModelId">@modelphone.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-4">
                        <label class="form-label fw-bold">Case Manufacturer</label>
                        <select class="form-control form-control-lg shadow-sm" id="caseManufacturerId" required>
                            <option value="">Select Case Manufacturer</option>
                            @foreach (var manufacturer in ViewBag.CaseManufacturers) {
                                <option value="@manufacturer.CaseManufacturerId">@manufacturer.Name</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn-lg" id="saveProduct">Save Product</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {

            // Get today's date and the date 7 days ago
            var today = new Date();
            var sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(today.getDate() - 7);

            // Format dates as YYYY-MM-DD (for compatibility with the date input)
            var todayFormatted = today.toISOString().split('T')[0];
            var sevenDaysAgoFormatted = sevenDaysAgo.toISOString().split('T')[0];

            // Set min, max, and default value attributes for the date input
            $('#purchaseDate').attr({
                'min': sevenDaysAgoFormatted,
                'max': todayFormatted,
                'value': todayFormatted // Set today's date as default
            });
            // Add new item
            $("#addItem").on("click", function () {
                var newItem = $(".item").first().clone();
                newItem.find("input").val("");
                newItem.find("select").val("");
                newItem.find(".total-price").val("0.00");
                $("#itemsSection").append(newItem);
                updateSummary();
            });

            // Remove item
            $(document).on("click", ".remove-item", function () {
                if ($(".item").length > 1) {
                    $(this).closest(".item").remove();
                    updateSummary();
                }
            });

            // Open modal to add new product
            $(document).on("click", ".add-product", function () {
                $("#addProductModal").modal("show");
            });

            // Save new product
            $("#saveProduct").on("click", function () {
                var caseName = $("#caseName").val();
                var modelId = $("#modelId").val();
                var caseManufacturerId = $("#caseManufacturerId").val();

                if (caseName && modelId && caseManufacturerId) {
                    $.ajax({
                        url: "/Record/AddProduct",
                        type: "POST",
                        data: {
                            caseName: caseName,
                            modelId: modelId,
                            caseManufacturerId: caseManufacturerId
                        },
                        success: function (response) {
                            if (response.success) {
                                // Add the new product to the dropdown
                                var newOption = `<option value="${response.productId}">${response.caseName}</option>`;
                                $(".product-select").append(newOption);
                                $("#addProductModal").modal("hide");
                            }
                        }
                    });
                }
            });

            // Calculate total price
            $(document).on("input", ".quantity, .unit-price", function () {
                var item = $(this).closest(".item");
                var quantity = parseFloat(item.find(".quantity").val()) || 0;
                var unitPrice = parseFloat(item.find(".unit-price").val()) || 0;
                var totalPrice = quantity * unitPrice;
                item.find(".total-price").val(totalPrice.toFixed(2));
                updateSummary();
            });

            // Update purchase summary
            function updateSummary() {
                var itemCount = $(".item").length;
                var subtotal = 0;
                $(".item").each(function () {
                    var totalPrice = parseFloat($(this).find(".total-price").val()) || 0;
                    subtotal += totalPrice;
                });
                $("#itemCount").text(itemCount);
                $("#subtotal").text(subtotal.toFixed(2));
            }
        });
    </script>
}